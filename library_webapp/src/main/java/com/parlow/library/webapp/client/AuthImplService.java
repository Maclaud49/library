
package com.parlow.library.webapp.client;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "AuthImplService", targetNamespace = "http://impl.service.webservice.library.parlow.com/", wsdlLocation = "http://localhost:8081/Authorization/auth?wsdl")
public class AuthImplService
    extends Service
{

    private final static URL AUTHIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException AUTHIMPLSERVICE_EXCEPTION;
    private final static QName AUTHIMPLSERVICE_QNAME = new QName("http://impl.service.webservice.library.parlow.com/", "AuthImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8081/Authorization/auth?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        AUTHIMPLSERVICE_WSDL_LOCATION = url;
        AUTHIMPLSERVICE_EXCEPTION = e;
    }

    public AuthImplService() {
        super(__getWsdlLocation(), AUTHIMPLSERVICE_QNAME);
    }

    public AuthImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), AUTHIMPLSERVICE_QNAME, features);
    }

    public AuthImplService(URL wsdlLocation) {
        super(wsdlLocation, AUTHIMPLSERVICE_QNAME);
    }

    public AuthImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, AUTHIMPLSERVICE_QNAME, features);
    }

    public AuthImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AuthImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns AuthI
     */
    @WebEndpoint(name = "AuthImplPort")
    public AuthI getAuthImplPort() {
        return super.getPort(new QName("http://impl.service.webservice.library.parlow.com/", "AuthImplPort"), AuthI.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthI
     */
    @WebEndpoint(name = "AuthImplPort")
    public AuthI getAuthImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://impl.service.webservice.library.parlow.com/", "AuthImplPort"), AuthI.class, features);
    }

    private static URL __getWsdlLocation() {
        if (AUTHIMPLSERVICE_EXCEPTION!= null) {
            throw AUTHIMPLSERVICE_EXCEPTION;
        }
        return AUTHIMPLSERVICE_WSDL_LOCATION;
    }

}
